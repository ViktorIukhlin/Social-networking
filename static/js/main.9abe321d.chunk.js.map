{"version":3,"sources":["components/Navigation/Nav.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Messages/Dialogs.module.css","components/Friends/Friends.module.css","components/Friends/Friend/Friend.module.css","components/Messages/DialogItem/DialogItem.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Messages/Message/Message.module.css","serviceWorker.js","components/Header/Header.jsx","components/Friends/Friend/Friend.jsx","components/Friends/Friends.jsx","components/Navigation/Nav.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Messages/DialogItem/DialogItem.jsx","components/Messages/Message/Message.jsx","components/Messages/Dialogs.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","App.js","redux/state.js","render.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","s","header","src","alt","Friend","props","container","photo","name","Friends","listOfFriends","state","map","item","title","content","Nav","nav","link","activeClassName","active","to","Post","post","id","message","likesCount","MyPosts","myPosts","posts","newPostElement","React","createRef","area","ref","onClick","text","current","value","addPost","ProfileInfo","boxPhoto","blockAbout","info","Main","main","picture","DialogItem","path","nameContainer","Message","Dialogs","dialogsMessages","messages","dialogsItems","dialogs","newMessage","namesList","alert","News","Music","Settings","App","basename","process","render","messagePage","Profile","profilePage","component","postMessage","newPost","push","renderDomTree","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,KAAO,kBAAkB,OAAS,sB,iBCA3ED,EAAOC,QAAU,CAAC,SAAW,8BAA8B,MAAQ,2BAA2B,KAAO,0BAA0B,KAAO,0BAA0B,KAAO,4B,kBCAvKD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,UAAY,2BAA2B,KAAO,wB,gBCAtID,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,uBAAuB,QAAU,2B,gBCAlGD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,MAAQ,sBAAsB,KAAO,uB,gBCA7FD,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,KAAO,yBAAyB,OAAS,6B,mBCA7GD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,QAAU,2B,gBCAzDD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,mBCAtDD,EAAOC,QAAU,CAAC,OAAS,yB,iBCA3BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,QAAU,2B,wKCWRC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oECPSC,EARA,WACX,OACI,4BAAQC,UAAWC,IAAEC,QACjB,yBAAKC,IAAK,6HAA6HC,IAAI,W,yDCMxIC,EATA,SAACC,GACZ,OACI,yBAAKN,UAAWC,IAAEM,WACd,yBAAKP,UAAWC,IAAEO,QAClB,yBAAKR,UAAWC,IAAEQ,MAAOH,EAAMG,QCS5BC,EAZC,SAACJ,GACb,IAAIK,EAAgBL,EAAMM,MAAMC,KAC5B,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAQL,KAAMK,EAAKL,UAE/B,OACI,yBAAKT,UAAWC,IAAEM,WACd,yBAAKP,UAAWC,IAAEc,OAAlB,WACA,yBAAKf,UAAWC,IAAEe,SAAlB,IAA6BL,EAA7B,OCOGM,EAbH,SAACX,GACT,OACI,yBAAKN,UAAWC,IAAEiB,KACd,kBAAC,IAAD,CAASlB,UAAWC,IAAEkB,KAAMC,gBAAiBnB,IAAEoB,OAAQC,GAAG,YAA1D,aACA,kBAAC,IAAD,CAAStB,UAAWC,IAAEkB,KAAMC,gBAAiBnB,IAAEoB,OAAQC,GAAG,aAA1D,cACA,kBAAC,IAAD,CAAStB,UAAWC,IAAEkB,KAAMC,gBAAiBnB,IAAEoB,OAAQC,GAAG,SAA1D,UACA,kBAAC,IAAD,CAAStB,UAAWC,IAAEkB,KAAMC,gBAAiBnB,IAAEoB,OAAQC,GAAG,UAA1D,WACA,kBAAC,IAAD,CAAStB,UAAWC,IAAEkB,KAAMC,gBAAiBnB,IAAEoB,OAAQC,GAAG,aAA1D,cACA,kBAAC,EAAD,CAASV,MAAON,EAAMM,U,mDCGnBW,EAbF,SAACjB,GACV,OACI,yBAAKN,UAAWC,IAAEuB,MACd,yBAAKrB,IAAI,kFAAkFC,IAAI,WAC3F,6BAAME,EAAMmB,GAFpB,IAEyBnB,EAAMoB,QAC3B,6BACI,kCAAQpB,EAAMqB,WAAd,YCyBDC,EA7BC,SAACtB,GAEb,IAAIuB,EAAUvB,EAAMwB,MAAMjB,KACtB,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAMW,GAAIX,EAAKW,GAAIC,QAASZ,EAAKY,QAASC,WAAYb,EAAKa,gBAGnEI,EAAiBC,IAAMC,YAO3B,OACI,uCAEI,yBAAKjC,UAAWC,IAAEiC,MACd,8BAAUC,IAAKJ,IACf,4BAAQK,QAVJ,WACZ,IAAIC,EAAON,EAAeO,QAAQC,MAClCjC,EAAMkC,QAAQH,KAQN,SAEJ,yBAAKrC,UAAWC,IAAE6B,OACbD,K,gBCHFY,EApBK,WAChB,OAEI,yBAAKzC,UAAWC,IAAEM,WACd,yBAAKP,UAAWC,IAAEyC,UACd,yBAAK1C,UAAWC,IAAEO,MAAOL,IAAI,sEAAsEC,IAAI,aAE3G,yBAAKJ,UAAWC,IAAE0C,YACd,yBAAK3C,UAAWC,IAAEQ,MAAlB,aAEA,yBAAKT,UAAWC,IAAE2C,MAAlB,4BACA,yBAAK5C,UAAWC,IAAE2C,MAAlB,0BACA,yBAAK5C,UAAWC,IAAE2C,MAAlB,qBACA,yBAAK5C,UAAWC,IAAE2C,MAAlB,8CCEDC,EAbF,SAACvC,GACV,OACI,0BAAMN,UAAWC,IAAE6C,MACf,6BACI,yBAAK9C,UAAWC,IAAE8C,QAAS5C,IAAI,8FAA8FC,IAAI,SAEjI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAS0B,MAAOxB,EAAMM,MAAMkB,MAAOU,QAASlC,EAAMkC,a,kCCEnDQ,EAVI,SAAC1C,GAChB,IAAI2C,EAAO,aAAe3C,EAAMmB,GAEhC,OACI,yBAAKzB,UAAWC,IAAEiD,eACd,kBAAC,IAAD,CAAS5B,GAAI2B,EAAMjD,UAAWC,IAAEQ,KAAMW,gBAAiBnB,IAAEoB,QAASf,EAAMG,Q,iBCArE0C,EANC,SAAC7C,GACb,OACA,yBAAKN,UAAWC,IAAEyB,SAAUpB,EAAMoB,UC6BvB0B,EA7BC,SAAC9C,GACb,IAAI+C,EAAkB/C,EAAMM,MAAM0C,SAASzC,KACvC,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAASY,QAASZ,EAAKY,aAE/B6B,EAAejD,EAAMM,MAAM4C,QAAQ3C,KACnC,SAAAC,GAAI,OAAI,kBAAC,EAAD,CAAYL,KAAMK,EAAKL,KAAMgB,GAAIX,EAAKW,QAG9CgC,EAAazB,IAAMC,YAKvB,OACI,yBAAKjC,UAAWC,IAAEuD,SACd,yBAAKxD,UAAWC,IAAEyD,WACbH,GAEL,yBAAKvD,UAAWC,IAAEe,SACbqC,EACD,yBAAKrD,UAAWC,IAAEiC,MACd,8BAAUC,IAAKsB,IACf,4BAAQrB,QAbR,WACZuB,MAAMF,EAAWnB,QAAQC,SAYb,YChBLqB,G,MARF,SAACtD,GACV,OACI,uCCMOuD,G,MARD,SAACvD,GACX,OACI,wCCMOwD,G,MARE,SAACxD,GACd,OACI,2C,OCyBOyD,EAnBH,SAACzD,GACX,OACE,kBAAC,IAAD,CAAe0D,SAAUC,sBACvB,yBAAKjE,UAAU,eACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAKY,MAAON,EAAMM,MAAMD,gBACxB,yBAAKX,UAAU,uBACb,kBAAC,IAAD,CAAOiD,KAAK,YAAYiB,OAAS,kBAAM,kBAAC,EAAD,CAAUtD,MAAON,EAAMM,MAAMuD,iBACpE,kBAAC,IAAD,CAAOlB,KAAK,WAAYiB,OAAS,kBAAM,kBAACE,EAAD,CAAUxD,MAAON,EAAMM,MAAMyD,YAAa7B,QAASlC,EAAMkC,aAEhG,kBAAC,IAAD,CAAOS,KAAK,QAAQqB,UAAWV,IAC/B,kBAAC,IAAD,CAAOX,KAAK,SAASqB,UAAWT,IAChC,kBAAC,IAAD,CAAOZ,KAAK,YAAYqB,UAAWR,QCrBzClD,EAAQ,CACRyD,YAAY,CACRvC,MAAO,CACH,CAAEL,GAAI,EAAGC,QAAS,eAAgBC,WAAY,IAC9C,CAAEF,GAAI,EAAGC,QAAS,QAASC,WAAY,GACvC,CAAEF,GAAI,EAAGC,QAAS,cAAeC,WAAY,KAGrDwC,YAAa,CACTX,QAAS,CACL,CAAE/C,KAAM,QAASgB,GAAI,GACrB,CAAEhB,KAAM,SAAUgB,GAAI,GACtB,CAAEhB,KAAM,OAAQgB,GAAI,GACpB,CAAEhB,KAAM,OAAQgB,GAAI,GACpB,CAAEhB,KAAM,MAAOgB,GAAI,GACnB,CAAEhB,KAAM,OAAQgB,GAAI,IAExB6B,SAAU,CACN,CAAE7B,GAAI,EAAGC,QAAS,gCAClB,CAAED,GAAI,EAAGC,QAAS,kBAClB,CAAED,GAAI,EAAGC,QAAS,+BAG1Bf,cAAc,CACV,CAACF,KAAM,SACP,CAACA,KAAM,UACP,CAACA,KAAM,QACP,CAACA,KAAM,OACP,CAACA,KAAM,QACP,CAACA,KAAM,UAKJ+B,EAAU,SAAC+B,GAElB,IAAIC,EAAU,CACV/C,GAAI,EACJC,QAAS6C,EACT5C,WAAY,GAEhBf,EAAMyD,YAAYvC,MAAM2C,KAAKD,GAC7BE,EAAc9D,ICtCP8D,EAAgB,SAAC9D,GAC1B+D,IAAST,OACP,kBAAC,IAAMU,WAAP,KACE,kBAAC,EAAD,CAAKhE,MAAOA,EAAO4B,QAASA,KAE9BqC,SAASC,eAAe,UCP5BJ,EF2Ce9D,GhBoFT,kBAAmBmE,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM5D,c","file":"static/js/main.9abe321d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2JorA\",\"link\":\"Nav_link__2XlB4\",\"active\":\"Nav_active__aX0lz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxPhoto\":\"ProfileInfo_boxPhoto__alVup\",\"photo\":\"ProfileInfo_photo__12V5_\",\"name\":\"ProfileInfo_name__1S0LI\",\"info\":\"ProfileInfo_info__7S1gl\",\"post\":\"ProfileInfo_post__TV24d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2pyKd\",\"content\":\"Dialogs_content__1ddmb\",\"namesList\":\"Dialogs_namesList__257xg\",\"area\":\"Dialogs_area__1K42L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Friends_container__3zZfC\",\"title\":\"Friends_title__3879L\",\"content\":\"Friends_content__2tQBK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Friend_container__E-7aN\",\"photo\":\"Friend_photo__2RKi5\",\"name\":\"Friend_name__Dq0q8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameContainer\":\"DialogItem_nameContainer__ojTPN\",\"name\":\"DialogItem_name__3EKGr\",\"active\":\"DialogItem_active__1v9kt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__uyElh\",\"picture\":\"Profile_picture__2ZrMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__ckCo6\",\"area\":\"MyPosts_area__qf_gd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Cv8Pc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3i7WC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__3w382\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src ='https://mpng.subpng.com/20180326/hqq/kisspng-phoenix-cygnini-symbol-logo-phoenix-5ab9b15872f4d3.5926073915221190004709.jpg' alt=\"logo\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Friend.module.css'\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.photo}></div>\r\n            <div className={s.name}>{props.name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport s from './Friends.module.css'\r\nimport Friend from './Friend/Friend';\r\n\r\nconst Friends = (props) => {\r\n    let listOfFriends = props.state.map(\r\n        item => <Friend name={item.name} />\r\n    )\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.title}>Friends</div>\r\n            <div className={s.content}> {listOfFriends} </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport s from './Nav.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Friends from '../Friends/Friends';\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/profile\"> Profile </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/messages\"> Messages </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/news\"> News </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/music\"> Music </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/settings\"> Settings </NavLink>\r\n            <Friends state={props.state}/>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src=\"https://s0.rbk.ru/v6_top_pics/resized/1200xH/media/img/2/31/755913669534312.jpg\" alt=\"avatar\" />\r\n                <br/>{props.id}:{props.message} \r\n            <div>\r\n                <span> {props.likesCount} like</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\n\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let myPosts = props.posts.map(\r\n        item => <Post id={item.id} message={item.message} likesCount={item.likesCount} />\r\n    )\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    const addPost = () => {\r\n        let text = newPostElement.current.value;\r\n        props.addPost(text);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            My Post\r\n            <div className={s.area}>\r\n                <textarea ref={newPostElement}></textarea>\r\n                <button onClick={addPost}>Send</button>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {myPosts}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n\r\n        <div className={s.container}>\r\n            <div className={s.boxPhoto}>\r\n                <img className={s.photo} src=\"https://sun9-6.userapi.com/c628318/v628318082/4822f/s8wqON4rtbs.jpg\" alt=\"PhotoMy\" />\r\n            </div>\r\n            <div className={s.blockAbout}>\r\n                <div className={s.name}>Batton B.</div>\r\n\r\n                <div className={s.info}>Date of Brith: 2 january</div>\r\n                <div className={s.info}>City: Saint-Petersburg</div>\r\n                <div className={s.info}>Education: BSU'11</div>\r\n                <div className={s.info}>Web Site: https://batton-batonovich.com</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPosts from './MyPosts/MyPosts.jsx'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <main className={s.main}>\r\n            <div>\r\n                <img className={s.picture} src=\"https://image.freepik.com/free-vector/neon-light-arrow-direction-perspective_1017-22033.jpg\" alt=\"gras\" />\r\n\r\n                <ProfileInfo />\r\n                <MyPosts posts={props.state.posts} addPost={props.addPost}/>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.nameContainer}>\r\n            <NavLink to={path} className={s.name} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n    let dialogsMessages = props.state.messages.map(\r\n        item => <Message message={item.message} />\r\n    )\r\n    let dialogsItems = props.state.dialogs.map(\r\n        item => <DialogItem name={item.name} id={item.id} />\r\n    )\r\n    \r\n    let newMessage = React.createRef();\r\n    const addPost = () => {\r\n        alert(newMessage.current.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.namesList}>\r\n                {dialogsItems}\r\n            </div>\r\n            <div className={s.content}>\r\n                {dialogsMessages}\r\n                <div className={s.area}>\r\n                    <textarea ref={newMessage}></textarea>\r\n                    <button onClick={addPost}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Nav from './components/Navigation/Nav';\nimport Profile from './components/Profile/Profile';\nimport Messages from './components/Messages/Dialogs';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { Route, BrowserRouter } from 'react-router-dom';\n\nconst App = (props) => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"app-wrapper\">\n        <Header />\n        <Nav state={props.state.listOfFriends}/>\n        <div className=\"app-wrapper-content\">\n          <Route path='/messages' render={ () => <Messages state={props.state.messagePage} />} />\n          <Route path='/profile'  render={ () => <Profile  state={props.state.profilePage} addPost={props.addPost}/>} />\n\n          <Route path='/news' component={News} />\n          <Route path='/music' component={Music} />\n          <Route path='/settings' component={Settings} />\n        </div>\n      </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","import {renderDomTree} from './../render'\r\n\r\nlet state = {\r\n    profilePage:{\r\n        posts: [\r\n            { id: 1, message: 'How are you?', likesCount: 11 },\r\n            { id: 2, message: 'mmmm?', likesCount: 2 },\r\n            { id: 3, message: 'Are you ok?', likesCount: 4 }\r\n        ]\r\n    },\r\n    messagePage: {\r\n        dialogs: [\r\n            { name: 'Hanna', id: 1 },\r\n            { name: 'BonBon', id: 2 },\r\n            { name: 'Mike', id: 3 },\r\n            { name: 'Dino', id: 4 },\r\n            { name: 'Lex', id: 5 },\r\n            { name: 'MoMo', id: 6 }\r\n        ],\r\n        messages: [\r\n            { id: 1, message: 'I think the time has come...' },\r\n            { id: 1, message: 'I\\'m very angry' },\r\n            { id: 1, message: 'I know you ate my food!!!' }\r\n        ]\r\n    },\r\n    listOfFriends:[\r\n        {name: 'Hanna'},\r\n        {name: 'BonBon'},\r\n        {name: 'Dino'},\r\n        {name: 'Lex'},\r\n        {name: 'MoMo'},\r\n        {name: 'Mike'}\r\n    ]\r\n\r\n}\r\n\r\nexport let addPost = (postMessage) => {\r\n    debugger;\r\n    let newPost = {\r\n        id: 5,\r\n        message: postMessage,\r\n        likesCount: 0\r\n    }\r\n    state.profilePage.posts.push(newPost);\r\n    renderDomTree(state);\r\n}\r\n\r\nexport default state;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { addPost } from './redux/state';\r\n\r\nexport let renderDomTree = (state) => {\r\n  ReactDOM.render(\r\n    <React.StrictMode>\r\n      <App state={state} addPost={addPost} />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n}\r\n","import * as serviceWorker from './serviceWorker';\nimport {renderDomTree} from './render';\nimport state from './redux/state';\n\nrenderDomTree(state);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}