{"version":3,"sources":["components/Users/User/User.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Navigation/Nav.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/users.png","img/spinner.svg","serviceWorker.js","api/api.js","redux/profileReducer.js","redux/sidebarReducer.js","utils/objectHelpers.js","redux/usersReducer.js","redux/authReducer.js","redux/appReducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Friends/Friend/Friend.jsx","redux/store.js","components/Friends/Friends.jsx","components/Navigation/Nav.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/common/Paginator/Paginator.jsx","components/Users/User/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/usersSelectors.js","components/Users/UsersContainer.jsx","components/Login/Login.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","App.js","hoc/withSuspense.js","index.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/common/FormsControls/FormsControls.module.css","redux/dialogsReducer.js","components/Friends/Friends.module.css","components/Friends/Friend/Friend.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css"],"names":["module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","initialState","posts","id","message","likesCount","profile","setStatus","type","profileReducer","state","action","newPost","newPostText","filter","p","postId","listOfFriends","name","sidebarReducer","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","SET_USER_DATA","login","isAuth","setAuthUserData","getAuthUserData","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","dialogsReducer","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","style","header","src","alt","loginBlock","onClick","logout","to","HeaderContainer","this","React","Component","connect","Friend","s","container","photo","_state","messagePage","dialogs","messages","newMessageBody","_callSubscriber","subscribe","observer","getState","Friends","item","key","title","content","Nav","nav","link","activeClassName","active","News","Music","Settings","Paginator","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","cn","selectedPage","pageNumber","e","User","user","photos","small","require","userPhoto","disabled","some","Users","Preloader","getUsersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","bind","totalCount","LoginReduxForm","reduxForm","handleSubmit","error","onSubmit","Field","placeholder","component","Input","autoComplete","validate","required","formSummaryError","length","stopSubmit","_error","formData","ProfileStatusWithHooks","editMode","setEditMode","useEffect","onChange","currentTarget","value","autoFocus","onBlur","onDoubleClick","ProfileInfo","boxPhoto","large","blockAbout","info","Post","maxLength10","maxLengthCreator","ReduxAddNewPostForm","Form","area","Textarea","MyPosts","memo","myPosts","values","addPost","MyPostsContainer","addPostActionCreator","Main","main","picture","ProfileContainer","params","authorizedUserId","history","getUserProfile","Profile","withRouter","DialogsContainer","lazy","App","initializeApp","path","render","fallback","promise","Promise","all","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","maxLength","FormControl","input","meta","child","hasError","touched","formControl","children","restProps","sendMessageActionCreator","body"],"mappings":"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","file":"static/js/main.67b5df07.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__u3hoT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3i7WC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2JorA\",\"link\":\"Nav_link__2XlB4\",\"active\":\"Nav_active__aX0lz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxPhoto\":\"ProfileInfo_boxPhoto__alVup\",\"photo\":\"ProfileInfo_photo__12V5_\",\"name\":\"ProfileInfo_name__1S0LI\",\"info\":\"ProfileInfo_info__7S1gl\",\"post\":\"ProfileInfo_post__TV24d\"};","module.exports = __webpack_public_path__ + \"static/media/users.4064b47b.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner.cdfbc787.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\r\n    'API-KEY':'accc52ca-f4dc-4254-a328-cfdd24e04b7e'\r\n  }\r\n});\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage = 1, pageSize = 10) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n    .then(response => {\r\n        return response.data;\r\n      });\r\n  },\r\n  follow(userId){\r\n    return instance.post(`follow/${userId}`)\r\n  },\r\n  unfollow(userId){\r\n    return instance.delete(`follow/${userId}`)\r\n  },\r\n  getProfile(userId){\r\n    return profileAPI.getProfile(userId)\r\n  }\r\n}\r\nexport const profileAPI = {\r\n  getProfile (userId) {\r\n    return instance.get('profile/'+ userId);\r\n  },\r\n  getStatus (userId) {\r\n    return instance.get('profile/status/'+ userId);\r\n  },\r\n  updateStatus(status) {\r\n    return instance.put( `profile/status`, { status: status } );\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`);\r\n  },\r\n  login( email, password, rememberMe = false ) {\r\n    return instance.post(`auth/login`, { email, password, rememberMe });\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`);\r\n  }\r\n}","import { profileAPI, usersAPI } from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = \"DELETE_POST\";\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: 'How are you?', likesCount: 11 },\r\n    { id: 2, message: 'mmmm?', likesCount: 2 },\r\n    { id: 3, message: 'Are you ok?', likesCount: 4 }\r\n  ],\r\n  profile: null,\r\n  status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case ADD_POST:  {\r\n      let newPost = {\r\n          id: 5,\r\n          message: action.newPostText,\r\n          likesCount: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: ''\r\n      };\r\n    }\r\n \r\n    case SET_USER_PROFILE:{\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      };\r\n    }\r\n    case SET_STATUS:{\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      };\r\n    }\r\n    case DELETE_POST:{\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter(p => p.id != action.postId)\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type:SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n  let response = await usersAPI.getProfile(userId)\r\n\r\n  dispatch(setUserProfile(response.data));\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n  let response = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(response.data));\r\n}\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n  let response = await profileAPI.updateStatus(status)\r\n  if (response.data.resultCode === 0){\r\n    dispatch(setStatus(status));\r\n  }\r\n}\r\n\r\nexport default profileReducer;\r\n","\r\nlet initialState = {\r\n    listOfFriends: [\r\n        { name: 'Hanna' },\r\n        { name: 'BonBon' },\r\n        { name: 'Dino' },\r\n        { name: 'Lex' },\r\n        { name: 'MoMo' },\r\n        { name: 'Mike' }\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n  return items.map(u => {\r\n    if (u[objPropName] === itemId) {\r\n      return {...u, ...newObjProps}\r\n    }\r\n    return u;\r\n  })\r\n}","import { usersAPI } from \"../api/api\";\r\nimport { updateObjectInArray } from \"../utils/objectHelpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  isFetching: true,\r\n  followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: true })\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: updateObjectInArray(state.users, action.userId, \"id\", { followed: false })\r\n      }\r\n    case SET_USERS:\r\n      return{\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return{\r\n        ...state,\r\n        currentPage: action.currentPage\r\n      }\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return{\r\n        ...state,\r\n        totalUsersCount: action.count\r\n      }\r\n    case TOGGLE_IS_FETCHING:\r\n      return{\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n    case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n      return{\r\n        ...state,\r\n        followingInProgress: action.isFetching \r\n        ? [...state.followingInProgress, action.userId]\r\n        : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n  return async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    dispatch(setCurrentPage(currentPage));\r\n\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n  \r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setUsersTotalCount(data.totalCount));\r\n  }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n  dispatch(toggleFollowingProgress(true, userId));\r\n  let response = await apiMethod(userId) \r\n  if(response.data.resultCode === 0) {\r\n    dispatch(actionCreator(userId));\r\n  };\r\n  dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n  }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n  return async (dispatch) => {\r\n    followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n  }\r\n}\r\n\r\nexport default usersReducer;\r\n ","import { stopSubmit } from \"redux-form\";\r\nimport { authAPI } from \"../api/api\";\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n \r\nlet initialState = {\r\n  userId: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SET_USER_DATA:\r\n      return {\r\n        ...state,\r\n        ...action.data\r\n        }\r\n   \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, data:{userId, email, login, isAuth}})\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n  let response = await authAPI.me();\r\n\r\n  if(response.data.resultCode === 0) {\r\n    let {id, login, email} = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true))\r\n  }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n  let response = await authAPI.login(email, password, rememberMe)\r\n\r\n  if(response.data.resultCode === 0) {\r\n      dispatch(getAuthUserData())\r\n  } else {\r\n    let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\r\n    let action = stopSubmit(\"login\", {_error: message});\r\n    dispatch(action)\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  let response = await authAPI.logout()\r\n  \r\n  if(response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import { getAuthUserData } from \"./authReducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n \r\nlet initialState = {\r\n  initialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case INITIALIZED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      }\r\n   \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const setInitializedSuccess = () => ({type: INITIALIZED_SUCCESS});\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n\r\n  Promise.all([promise]).then(() => {\r\n    dispatch(setInitializedSuccess());\r\n  });\r\n}\r\n \r\nexport default appReducer;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\nexport default store;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Header.module.css'\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={style.header}>\r\n            <img src ='https://mpng.subpng.com/20180326/hqq/kisspng-phoenix-cygnini-symbol-logo-phoenix-5ab9b15872f4d3.5926073915221190004709.jpg' alt=\"logo\"/>\r\n            <div className={style.loginBlock}>\r\n                {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> : <NavLink to={'/login'}>Login</NavLink>}\r\n                \r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/authReducer';\r\nimport Header from './Header';\r\n \r\n\r\nclass HeaderContainer extends React.Component {\r\n  render() {\r\n    return  <Header {...this.props} />\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout}) (HeaderContainer);","import React from 'react';\r\nimport s from './Friend.module.css'\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.photo}></div>\r\n            <div className={s.name}>{props.name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import dialogsReducer from './dialogsReducer'\r\nimport profileReducer from './profileReducer'\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                { id: 1, message: 'How are you?', likesCount: 11 },\r\n                { id: 2, message: 'mmmm?', likesCount: 2 },\r\n                { id: 3, message: 'Are you ok?', likesCount: 4 }\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        messagePage: {\r\n            dialogs: [\r\n                { name: 'Hanna', id: 1 },\r\n                { name: 'BonBon', id: 2 },\r\n                { name: 'Mike', id: 3 },\r\n                { name: 'Dino', id: 4 },\r\n                { name: 'Lex', id: 5 },\r\n                { name: 'MoMo', id: 6 }\r\n            ],\r\n            messages: [\r\n                { id: 1, message: 'I think the time has come...' },\r\n                { id: 1, message: 'I\\'m very angry' },\r\n                { id: 1, message: 'I know you ate my food!!!' }\r\n            ],\r\n            newMessageBody: \"\"\r\n        },\r\n        sidebar: {\r\n            listOfFriends: [\r\n                { name: 'Hanna' },\r\n                { name: 'BonBon' },\r\n                { name: 'Dino' },\r\n                { name: 'Lex' },\r\n                { name: 'MoMo' },\r\n                { name: 'Mike' }\r\n            ]\r\n        }\r\n    },\r\n    _callSubscriber () {},\r\n    \r\n    subscribe (observer) {\r\n        this._callSubscriber = observer; //pattern-observer\r\n    },\r\n    getState () {\r\n        return this._state;\r\n    },\r\n\r\n    dispatch(action){\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.dialogsPage = dialogsReducer(this._state.messagePage, action);\r\n        this._callSubscriber(this._state);\r\n    }\r\n     \r\n}\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Friends.module.css'\r\nimport Friend from './Friend/Friend';\r\n\r\nimport store from '../../redux/store'\r\n\r\nconst Friends = (props) => {\r\n    let listOfFriends = store.getState().sidebar.listOfFriends.map(\r\n        item => <Friend name={item.name} key={item.id} />\r\n    )\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.title}>Friends</div>\r\n            <div className={s.content}> {listOfFriends} </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport s from './Nav.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Friends from '../Friends/Friends';\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/profile\"> Profile </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/messages\"> Messages </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/news\"> News </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/music\"> Music </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/settings\"> Settings </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/users\"> Friends </NavLink>\r\n            <Friends state={props.state} to=\"/users\"/>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport styles from './Paginator.module.css'\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n  let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCount / portionSize);\r\n  let [portionNumber, setPortionNumber] = useState(1);\r\n  let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n  let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n  return (\r\n    <div className={styles.paginator}>\r\n      {portionNumber > 1 && \r\n      <button onClick={() => {setPortionNumber(portionNumber - 1)}}>PREV</button>}\r\n\r\n      {pages\r\n        .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n        .map((p) => {\r\n          return <span className = { cn({\r\n            [styles.selectedPage] : currentPage === p\r\n          }, styles.pageNumber)}\r\n          key={p}\r\n          onClick={(e) => {\r\n            onPageChanged(p);\r\n          }}> {p} </span>\r\n        })}\r\n        {portionCount > portionNumber && \r\n          <button onClick={() => { setPortionNumber(portionNumber + 1)}}>NEXT</button>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport styles from './User.module.css'\r\n\r\nconst User = ({user, followingInProgress, unfollow, follow}) => {\r\n  return (\r\n        <div>\r\n          <span>\r\n              <NavLink to={'/profile/'+ user.id}>\r\n                <img\r\n                  src={user.photos.small != null ? user.photos.small : require(\"../../../assets/images/users.png\")}\r\n                  alt=\"photosos\"\r\n                  className={styles.userPhoto}\r\n                />\r\n              </NavLink>\r\n            <div>\r\n              {user.followed ? (\r\n                <button disabled={followingInProgress.some(id => id === user.id)} \r\n                onClick={() => {unfollow(user.id)}}> \r\n                  Unfollow \r\n                </button>\r\n              ) : (\r\n                <button disabled={followingInProgress.some(id => id === user.id)} \r\n                onClick={() => {follow(user.id)}}>\r\n                  Follow\r\n                </button>)}\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <div>{user.name}</div>\r\n            <div>{user.status}</div>\r\n          </span>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User/User';\r\n\r\nlet Users = (props) => {\r\n  return (\r\n    <div>\r\n      <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged} totalUsersCount={props.totalUsersCount} pageSize={props.pageSize}/>\r\n      {props.users.map((item) => (\r\n         <User user={item} \r\n         followingInProgress={props.followingInProgress} \r\n         key={item.id}\r\n         unfollow={props.unfollow}\r\n         follow={props.follow}\r\n         />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\n\r\nlet Preloader = (props) => {\r\n  return <img src={require(\"../../../img/spinner.svg\")} alt=\"spiner\"/> \r\n}\r\n\r\nexport default Preloader;","export const getUsersPage = (state) => {\r\n  return state.usersPage.users;\r\n}\r\nexport const getPageSize = (state) => {\r\n  return state.usersPage.pageSize;\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n  return state.usersPage.totalUsersCount;\r\n}\r\nexport const getCurrentPage = (state) => {\r\n  return state.usersPage.currentPage;\r\n}\r\nexport const getIsFetching = (state) => {\r\n  return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n  return state.usersPage.followingInProgress;\r\n}  ","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { \r\n  follow, \r\n  unfollow, \r\n  setCurrentPage, \r\n  toggleFollowingProgress,\r\n  getUsers\r\n} from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport { compose } from 'redux';\r\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsersPage } from '../../redux/usersSelectors';\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n  componentDidMount(){\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize);\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n    {this.props.isFetching ? <Preloader /> : null}\r\n    <Users \r\n    totalUsersCount={this.props.totalUsersCount} \r\n    currentPage={this.props.currentPage}\r\n    pageSize={this.props.pageSize}\r\n    onPageChanged = {this.onPageChanged}\r\n    users={this.props.users}\r\n    follow={this.props.follow}\r\n    unfollow={this.props.unfollow}\r\n    followingInProgress={this.props.followingInProgress}\r\n    />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    users: getUsersPage(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers })\r\n) (UsersContainer)","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { Input } from '../common/FormsControls/FormsControls';\r\nimport { login } from \"../../redux/authReducer\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport style from \"../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <Field placeholder={'Email'} name={'email'} component={Input} autoComplete=\"off\" validate={required}/>\r\n      </div>\r\n      <div>\r\n        <Field placeholder={\"Password\"} name={'password'} component={Input} autoComplete=\"off\" validate={required} type={\"password\"}/>\r\n      </div>\r\n      <div>\r\n        <Field component={Input} name={'rememberMe'} type={\"checkbox\"}/> remember me\r\n      </div>\r\n        { error && <div className={style.formSummaryError}> {error} </div>}\r\n      <button>Login</button> \r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'}) (LoginForm)\r\n\r\nconst Login = (props) => {\r\n  const onSubmit = (formData) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n\r\n  if(props.isAuth) {\r\n    return <Redirect to={\"/profile\"} />\r\n  }\r\n\r\n  return <div>\r\n    <h1>Login</h1>\r\n    <LoginReduxForm onSubmit={onSubmit}/>\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login}) (Login);","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport style from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect ( () => {\r\n    setStatus(props.status);\r\n  }, [props.status] );\r\n\r\n  const activateEditMode = () => {\r\n    setEditMode(true);\r\n  }\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  }\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value)\r\n  }\r\n  return (\r\n    <div>\r\n      {!editMode \r\n      ?\r\n        <div>\r\n          <span onDoubleClick={activateEditMode}>{props.status || \"No status\"}</span>\r\n        </div>\r\n      :\r\n        <div>\r\n          <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode } value={status}/>\r\n        </div>\r\n      } \r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport style from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks'\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style.boxPhoto}>\r\n                <img className={style.photo} src={props.profile.photos.large} alt=\"PhotoMy\" />\r\n            </div>\r\n            <div className={style.blockAbout}>\r\n                <div className={style.name}>Batton B.</div>\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n                <div className={style.info}>Date of Brith: 2 january</div>\r\n                <div className={style.info}>City: Saint-Petersburg</div>\r\n                <div className={style.info}>Education: BSU'11</div>\r\n                <div className={style.info}>Web Site: https://batton-batonovich.com</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src=\"https://s0.rbk.ru/v6_top_pics/resized/1200xH/media/img/2/31/755913669534312.jpg\" alt=\"avatar\" />\r\n                <br/>{props.id}:{props.message} \r\n            <div>\r\n                <span> {props.likesCount} like</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, Form, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls'\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n  return(\r\n    <Form className={s.area} onSubmit={props.handleSubmit}>\r\n      <Field name=\"newPostText\" component={Textarea} validate={[required, maxLength10]} placeholder=\"Post message\"/>\r\n      <button>Send</button>\r\n    </Form>\r\n  )\r\n}\r\n\r\nlet ReduxAddNewPostForm = reduxForm({form: \"profileAddNewPostForm\"}) (AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n   \r\n  let myPosts = props.posts.map(\r\n    item => <Post id={item.id} message={item.message} key={item.id} likesCount={item.likesCount} />\r\n  )\r\n\r\n  const onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      My Post\r\n      <ReduxAddNewPostForm onSubmit={onAddPost}/>\r\n      <div className={s.posts}>\r\n        {myPosts}\r\n      </div>\r\n    </div>\r\n  )\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n \r\nimport {addPostActionCreator} from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <main className={s.main}>\r\n            <div>\r\n                <img className={s.picture} src=\"https://image.freepik.com/free-vector/neon-light-arrow-direction-perspective_1017-22033.jpg\" alt=\"gras\" />\r\n\r\n                <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n                <MyPostsContainer />\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport {getUserProfile, getStatus, updateStatus} from '../../redux/profileReducer'\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component{\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId){\r\n      userId = this.props.authorizedUserId;\r\n      if(!userId){\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }    \r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus = {this.props.updateStatus}/>\r\n  )}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose (\r\n  connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter\r\n) (ProfileContainer)\r\n\r\n","import React from 'react';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Nav from './components/Navigation/Nav';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { Route, HashRouter } from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport {initializeApp} from './redux/appReducer'\nimport { compose } from 'redux';\nimport Preloader from './components/common/Preloader/Preloader';\nimport { withSuspense } from './hoc/withSuspense';\nimport ProfileContainer from './components/Profile/ProfileContainer'\n\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\n\n\n\nclass App extends React.Component {\n  componentDidMount(){\n    this.props.initializeApp();\n  }\n  render () {\n    if(!this.props.initialized){\n      return <Preloader />\n    }\n    return (\n      <HashRouter>\n        <div className=\"app-wrapper\">\n          <HeaderContainer />\n          <Nav state={this.props.store}/>\n          <div className=\"app-wrapper-content\">\n            <Route path='/messages' render={ withSuspense(DialogsContainer)} />\n            <Route path='/profile/:userId?' render={ () => <ProfileContainer />}/>\n            <Route path='/users'  render={ () => <UsersContainer />}/>\n            <Route path='/login'  render={ () => <Login />}/>\n  \n            <Route path='/news' component={News} />\n            <Route path='/music' component={Music} />\n            <Route path='/settings' component={Settings} />\n          </div>\n        </div>\n      </HashRouter>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  initialized: state.app.initialized\n})\n\nexport default compose(\n  connect (mapStateToProps, {initializeApp})\n  ) (App);\n","import React from 'react';\r\nimport { Suspense } from 'react';\r\n\r\nexport const withSuspense = (Component) => {\r\n  return (props) => {\r\n    return <Suspense fallback={ <div> Loading... </div> }> <Component {...props}/> </Suspense>\r\n  }\r\n}","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister();\n","export const required = value => {\r\n  if (value) return undefined;\r\n  return \"Field is required\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n  if ( value.length > maxLength ) return `Max length is ${maxLength} symbols`\r\n  return undefined;\r\n}","import React from \"react\";\r\nimport styles from './FormsControls.module.css'\r\n\r\nconst FormControl = ({input, meta, child, ...props}) => {\r\n  const hasError = meta.touched && meta.error;\r\n  return (\r\n    <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      { hasError && <span>{meta.error}</span> }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return <FormControl {...props}> <textarea {...input} {...restProps}/> </FormControl>\r\n}\r\n \r\nexport const Input = (props) => {\r\n  const {input, meta, child, ...restProps} = props;\r\n  return <FormControl {...props}> <input {...input} {...restProps}/> </FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2FZOQ\",\"error\":\"FormsControls_error__32TkC\",\"formSummaryError\":\"FormsControls_formSummaryError__m_3YX\"};","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { name: 'Hanna', id: 1 },\r\n    { name: 'BonBon', id: 2 },\r\n    { name: 'Mike', id: 3 },\r\n    { name: 'Dino', id: 4 },\r\n    { name: 'Lex', id: 5 },\r\n    { name: 'MoMo', id: 6 }\r\n  ],\r\n  messages: [\r\n    { id: 1, message: 'I think the time has come...' },\r\n    { id: 1, message: 'I\\'m very angry' },\r\n    { id: 1, message: 'I know you ate my food!!!' }\r\n  ] \r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case SEND_MESSAGE:\r\n      let body = action.newMessageBody;\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, { id: 777, message: body }]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageActionCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n \r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Friends_container__3zZfC\",\"title\":\"Friends_title__3879L\",\"content\":\"Friends_content__2tQBK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Friend_container__E-7aN\",\"photo\":\"Friend_photo__2RKi5\",\"name\":\"Friend_name__Dq0q8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__c8TTy\",\"pageNumber\":\"Paginator_pageNumber__-dz9k\",\"selectedPage\":\"Paginator_selectedPage__1FdYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Cv8Pc\",\"loginBlock\":\"Header_loginBlock__2rNa5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__uyElh\",\"picture\":\"Profile_picture__2ZrMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__ckCo6\",\"area\":\"MyPosts_area__qf_gd\"};"],"sourceRoot":""}