{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","DialogItem","props","path","id","className","s","nameContainer","to","name","activeClassName","active","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","area","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsMessages","messages","map","item","key","dialogsItems","dialogs","namesList","content","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageActionCreator","Component","RedirectComponent","this","React"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,QAAU,yBAAyB,UAAY,2BAA2B,KAAO,wB,oBCAtID,EAAOC,QAAU,CAAC,cAAgB,kCAAkC,KAAO,yBAAyB,OAAS,6B,oBCA7GD,EAAOC,QAAU,CAAC,QAAU,2B,mHCGxBC,EAA6B,SAACC,GAAD,MAAY,CAC3CC,OAAQD,EAAME,KAAKD,S,oDCSNE,EAVI,SAACC,GAChB,IAAIC,EAAO,aAAeD,EAAME,GAEhC,OACI,yBAAKC,UAAWC,IAAEC,eACd,kBAAC,IAAD,CAASC,GAAIL,EAAME,UAAWC,IAAEG,KAAMC,gBAAiBJ,IAAEK,QAAST,EAAMO,Q,kBCArEG,EANC,SAACV,GACb,OACA,yBAAKG,UAAWC,IAAEO,SAAUX,EAAMW,U,kCCyBhCC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAfL,SAACf,GACtB,OACE,0BAAMiB,SAAUjB,EAAMkB,cACpB,yBAAKf,UAAWC,IAAEe,MAChB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACZf,KAAK,iBACLgB,SAAU,CAACC,IAAUZ,GACrBa,YAAY,uBAElB,6CAQOC,EAxCC,SAAC1B,GACf,IAAIJ,EAAQI,EAAM2B,YAEdC,EAAkBhC,EAAMiC,SAASC,KAAI,SAACC,GAAD,OACvC,kBAAC,EAAD,CAASpB,QAASoB,EAAKpB,QAASqB,IAAKD,EAAK7B,QAExC+B,EAAerC,EAAMsC,QAAQJ,KAAI,SAACC,GAAD,OACnC,kBAAC,EAAD,CAAYxB,KAAMwB,EAAKxB,KAAMyB,IAAKD,EAAK7B,GAAIA,GAAI6B,EAAK7B,QAOtD,OACE,yBAAKC,UAAWC,IAAE8B,SAChB,yBAAK/B,UAAWC,IAAE+B,WAAYF,GAC9B,yBAAK9B,UAAWC,IAAEgC,SAAUR,GAC5B,kBAACd,EAAD,CAAqBG,SARH,SAACoB,GACrBrC,EAAMsC,YAAYD,EAAOE,qBCCdC,sBACbC,aAdoB,SAAC7C,GACrB,MAAO,CACL+B,YAAa/B,EAAM+B,gBAGE,SAACe,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAyBJ,UJPR,SAACK,GAAe,IACxCC,EADuC,uKAGzC,OAAKC,KAAK9C,MAAMH,OACT,kBAAC+C,EAAcE,KAAK9C,OADK,kBAAC,IAAD,CAAUM,GAAG,eAHJ,GACbyC,IAAMH,WAStC,OAFqCH,YAAQ9C,EAAR8C,CAAqCI,KII7DL,CAGZd","file":"static/js/3.dbf372f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1XVnD\",\"content\":\"Dialogs_content__3zGP7\",\"namesList\":\"Dialogs_namesList__I2Rza\",\"area\":\"Dialogs_area__3wDvW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameContainer\":\"DialogItem_nameContainer__22nhk\",\"name\":\"DialogItem_name__3tW8A\",\"active\":\"DialogItem_active__3Weed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__LlySc\"};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) {return <Redirect to='/login' />}\r\n      return <Component {...this.props} />\r\n    }\r\n  }\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent\r\n}","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.nameContainer}>\r\n            <NavLink to={path} className={s.name} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport Message from './Message/Message'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Textarea } from '../common/FormsControls/FormsControls'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage\r\n\r\n  let dialogsMessages = state.messages.map((item) => (\r\n    <Message message={item.message} key={item.id} />\r\n  ))\r\n  let dialogsItems = state.dialogs.map((item) => (\r\n    <DialogItem name={item.name} key={item.id} id={item.id} />\r\n  ))\r\n\r\n  const addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.namesList}>{dialogsItems}</div>\r\n      <div className={s.content}>{dialogsMessages}</div>\r\n      <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n    </div>\r\n  )\r\n}\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div className={s.area}>\r\n        <Field component={Textarea}\r\n              name=\"newMessageBody\"\r\n              validate={[required, maxLength50]}\r\n              placeholder=\"Enter your message\" \r\n              />\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"}) (AddMessageForm);\r\n\r\nexport default Dialogs\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageActionCreator } from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageActionCreator(newMessageBody));\r\n    } \r\n  }\r\n}\r\n\r\nexport default compose (\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n) (Dialogs);"],"sourceRoot":""}