{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Dialogs/Dialogs.module.css","components/Friends/Friends.module.css","components/Friends/Friend/Friend.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Users/styles.module.css","components/Header/Header.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Message/Message.module.css","components/Navigation/Nav.module.css","assets/images/users.png","serviceWorker.js","redux/profileReducer.js","redux/dialogsReducer.js","redux/sidebarReducer.js","redux/usersReducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Friends/Friend/Friend.jsx","redux/store.js","components/Friends/Friends.jsx","components/Navigation/Nav.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/News/News.jsx","components/Music/Music.jsx","components/Settings/Settings.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","initialState","posts","id","message","likesCount","newPostText","profileReducer","state","action","type","newPost","newText","dialogs","name","messages","newMessageBody","dialogsReducer","body","listOfFriends","sidebarReducer","users","pageSize","totalUsersCount","currentPage","usersReducer","map","item","userId","followed","count","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","store","createStore","Header","className","s","header","src","alt","Friend","props","container","photo","_state","messagePage","_callSubscriber","subscribe","observer","this","getState","dispatch","Friends","key","title","content","Nav","nav","link","activeClassName","active","to","ProfileInfo","boxPhoto","blockAbout","info","Post","post","MyPosts","myPosts","newPostElement","React","createRef","area","onChange","text","current","value","updateNewPostText","ref","onClick","addPost","MyPostsContainer","connect","updateNewPostTextActionCreator","Main","main","picture","DialogItem","path","nameContainer","Message","Dialogs","dialogsMessages","dialogsItems","namesList","placeholder","e","target","updateNewMessageBody","sendMessage","DialogsContainer","updateNewMessageBodyActionCreator","News","Music","Settings","Users","pagesCount","Math","ceil","pages","i","push","p","styles","selectedPage","onPageChanged","photos","small","require","userPhoto","unfollow","follow","status","UsersContainer","pageNumber","setCurrentPage","axios","then","response","setUsers","data","items","setTotalUsersCount","totalCount","Component","followActionCreator","unfollowActionCreator","setUsersActionCreator","App","render","Profile","component","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.f6fdd5c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"boxPhoto\":\"ProfileInfo_boxPhoto__alVup\",\"photo\":\"ProfileInfo_photo__12V5_\",\"name\":\"ProfileInfo_name__1S0LI\",\"info\":\"ProfileInfo_info__7S1gl\",\"post\":\"ProfileInfo_post__TV24d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1XVnD\",\"content\":\"Dialogs_content__3zGP7\",\"namesList\":\"Dialogs_namesList__I2Rza\",\"area\":\"Dialogs_area__3wDvW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Friends_container__3zZfC\",\"title\":\"Friends_title__3879L\",\"content\":\"Friends_content__2tQBK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Friend_container__E-7aN\",\"photo\":\"Friend_photo__2RKi5\",\"name\":\"Friend_name__Dq0q8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameContainer\":\"DialogItem_nameContainer__22nhk\",\"name\":\"DialogItem_name__3tW8A\",\"active\":\"DialogItem_active__3Weed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Profile_main__uyElh\",\"picture\":\"Profile_picture__2ZrMU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"MyPosts_post__ckCo6\",\"area\":\"MyPosts_area__qf_gd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"styles_userPhoto__3yat_\",\"selectedPage\":\"styles_selectedPage__2KSNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__Cv8Pc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3i7WC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__LlySc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__2JorA\",\"link\":\"Nav_link__2XlB4\",\"active\":\"Nav_active__aX0lz\"};","module.exports = __webpack_public_path__ + \"static/media/users.4064b47b.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\n\r\nlet initialState = {\r\n  posts: [\r\n    { id: 1, message: 'How are you?', likesCount: 11 },\r\n    { id: 2, message: 'mmmm?', likesCount: 2 },\r\n    { id: 3, message: 'Are you ok?', likesCount: 4 }\r\n  ],\r\n  newPostText: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case ADD_POST:  {\r\n      let newPost = {\r\n          id: 5,\r\n          message: state.newPostText,\r\n          likesCount: 0\r\n      };\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        newPostText: ''\r\n      };\r\n    }\r\n    case UPDATE_NEW_POST_TEXT: {\r\n      return {\r\n        ...state,\r\n        newPostText: action.newText\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\n\r\nexport const updateNewPostTextActionCreator = (text) => \r\n({type: UPDATE_NEW_POST_TEXT, newText: text})\r\n\r\n\r\nexport default profileReducer;\r\n","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE-NEW-MESSAGE-BODY';\r\nconst SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    { name: 'Hanna', id: 1 },\r\n    { name: 'BonBon', id: 2 },\r\n    { name: 'Mike', id: 3 },\r\n    { name: 'Dino', id: 4 },\r\n    { name: 'Lex', id: 5 },\r\n    { name: 'MoMo', id: 6 }\r\n  ],\r\n  messages: [\r\n    { id: 1, message: 'I think the time has come...' },\r\n    { id: 1, message: 'I\\'m very angry' },\r\n    { id: 1, message: 'I know you ate my food!!!' }\r\n  ],\r\n  newMessageBody: \"\"\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case UPDATE_NEW_MESSAGE_BODY:\r\n      return {\r\n        ...state,\r\n        newMessageBody: action.body\r\n      }\r\n    case SEND_MESSAGE:\r\n      let body = state.newMessageBody;\r\n      return {\r\n        ...state,\r\n        newMessageBody: '',\r\n        messages: [...state.messages, { id: 777, message: body }]\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageActionCreator = () => ({type: SEND_MESSAGE})\r\n\r\nexport const updateNewMessageBodyActionCreator = (body) => \r\n({type: UPDATE_NEW_MESSAGE_BODY, body: body})\r\n\r\nexport default dialogsReducer;","\r\nlet initialState = {\r\n    listOfFriends: [\r\n        { name: 'Hanna' },\r\n        { name: 'BonBon' },\r\n        { name: 'Dino' },\r\n        { name: 'Lex' },\r\n        { name: 'MoMo' },\r\n        { name: 'Mike' }\r\n    ]\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","const FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\n\r\nlet initialState = {\r\n  users: [],\r\n  pageSize: 5,\r\n  totalUsersCount: 0,\r\n  currentPage: 1\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case FOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(item => {\r\n          if(action.userId === item.id){\r\n            return {...item, followed: true}\r\n          }\r\n          return item;\r\n        })\r\n      }\r\n    case UNFOLLOW:\r\n      return {\r\n        ...state,\r\n        users: state.users.map(item => {\r\n          if(action.userId === item.id){\r\n            return {...item, followed: false}\r\n          }\r\n          return item;\r\n        })\r\n      }\r\n    case SET_USERS:\r\n      return{\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    case SET_CURRENT_PAGE:\r\n      return{\r\n        ...state,\r\n        currentPage: action.currentPage\r\n      }\r\n    case SET_TOTAL_USERS_COUNT:\r\n      return{\r\n        ...state,\r\n        totalUsersCount: action.count\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const followActionCreator = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowActionCreator = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsersActionCreator = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPageAC = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setUsersTotalCountAC = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\n\r\nexport default usersReducer;\r\n","import {combineReducers, createStore} from \"redux\";\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from \"./usersReducer\";\r\n\r\nlet reducers = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\n\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src ='https://mpng.subpng.com/20180326/hqq/kisspng-phoenix-cygnini-symbol-logo-phoenix-5ab9b15872f4d3.5926073915221190004709.jpg' alt=\"logo\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from './Friend.module.css'\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.photo}></div>\r\n            <div className={s.name}>{props.name}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import dialogsReducer from './dialogsReducer'\r\nimport profileReducer from './profileReducer'\r\n\r\nlet store = {\r\n    _state: {\r\n        profilePage: {\r\n            posts: [\r\n                { id: 1, message: 'How are you?', likesCount: 11 },\r\n                { id: 2, message: 'mmmm?', likesCount: 2 },\r\n                { id: 3, message: 'Are you ok?', likesCount: 4 }\r\n            ],\r\n            newPostText: ''\r\n        },\r\n        messagePage: {\r\n            dialogs: [\r\n                { name: 'Hanna', id: 1 },\r\n                { name: 'BonBon', id: 2 },\r\n                { name: 'Mike', id: 3 },\r\n                { name: 'Dino', id: 4 },\r\n                { name: 'Lex', id: 5 },\r\n                { name: 'MoMo', id: 6 }\r\n            ],\r\n            messages: [\r\n                { id: 1, message: 'I think the time has come...' },\r\n                { id: 1, message: 'I\\'m very angry' },\r\n                { id: 1, message: 'I know you ate my food!!!' }\r\n            ],\r\n            newMessageBody: \"\"\r\n        },\r\n        sidebar: {\r\n            listOfFriends: [\r\n                { name: 'Hanna' },\r\n                { name: 'BonBon' },\r\n                { name: 'Dino' },\r\n                { name: 'Lex' },\r\n                { name: 'MoMo' },\r\n                { name: 'Mike' }\r\n            ]\r\n        }\r\n    },\r\n    _callSubscriber () {},\r\n    \r\n    subscribe (observer) {\r\n        this._callSubscriber = observer; //pattern-observer\r\n    },\r\n    getState () {\r\n        return this._state;\r\n    },\r\n\r\n    dispatch(action){\r\n        this._state.profilePage = profileReducer(this._state.profilePage, action);\r\n        this._state.dialogsPage = dialogsReducer(this._state.messagePage, action);\r\n        this._callSubscriber(this._state);\r\n    }\r\n     \r\n}\r\n\r\nexport default store;\r\nwindow.store = store;","import React from 'react';\r\nimport s from './Friends.module.css'\r\nimport Friend from './Friend/Friend';\r\n\r\nimport store from '../../redux/store'\r\n\r\nconst Friends = (props) => {\r\n    let listOfFriends = store.getState().sidebar.listOfFriends.map(\r\n        item => <Friend name={item.name} key={item.id} />\r\n    )\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.title}>Friends</div>\r\n            <div className={s.content}> {listOfFriends} </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends;","import React from 'react';\r\nimport s from './Nav.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Friends from '../Friends/Friends';\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/profile\"> Profile </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/messages\"> Messages </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/news\"> News </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/music\"> Music </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/settings\"> Settings </NavLink>\r\n            <NavLink className={s.link} activeClassName={s.active} to=\"/users\"> Friends </NavLink>\r\n            <Friends state={props.state} to=\"/users\"/>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileInfo = () => {\r\n    return (\r\n\r\n        <div className={s.container}>\r\n            <div className={s.boxPhoto}>\r\n                <img className={s.photo} src=\"https://sun9-6.userapi.com/c628318/v628318082/4822f/s8wqON4rtbs.jpg\" alt=\"PhotoMy\" />\r\n            </div>\r\n            <div className={s.blockAbout}>\r\n                <div className={s.name}>Batton B.</div>\r\n\r\n                <div className={s.info}>Date of Brith: 2 january</div>\r\n                <div className={s.info}>City: Saint-Petersburg</div>\r\n                <div className={s.info}>Education: BSU'11</div>\r\n                <div className={s.info}>Web Site: https://batton-batonovich.com</div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.post}>\r\n            <img src=\"https://s0.rbk.ru/v6_top_pics/resized/1200xH/media/img/2/31/755913669534312.jpg\" alt=\"avatar\" />\r\n                <br/>{props.id}:{props.message} \r\n            <div>\r\n                <span> {props.likesCount} like</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = (props) => {\r\n  let myPosts = props.posts.map(\r\n    item => <Post id={item.id} message={item.message} key={item.id} likesCount={item.likesCount} />\r\n  )\r\n\r\n  let newPostElement = React.createRef();\r\n\r\n  const onAddPost = () => {\r\n    props.addPost();\r\n  }\r\n\r\n  const onPostChange = () => {\r\n    let text = newPostElement.current.value;\r\n    props.updateNewPostText(text);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      My Post\r\n      <div className={s.area}>\r\n        <textarea onChange={onPostChange} \r\n        ref={newPostElement} \r\n        value={props.newPostText}\r\n        /> \r\n\r\n        <button onClick={onAddPost}>Send</button>\r\n      </div>\r\n      <div className={s.posts}>\r\n        {myPosts}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n \r\nimport {addPostActionCreator, updateNewPostTextActionCreator} from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    updateNewPostText: (text) => {\r\n      let action = updateNewPostTextActionCreator(text);\r\n      dispatch(action);\r\n    },\r\n    addPost: () => {\r\n      dispatch(addPostActionCreator());\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Main = (props) => {\r\n    return (\r\n        <main className={s.main}>\r\n            <div>\r\n                <img className={s.picture} src=\"https://image.freepik.com/free-vector/neon-light-arrow-direction-perspective_1017-22033.jpg\" alt=\"gras\" />\r\n\r\n                <ProfileInfo />\r\n                <MyPostsContainer store={props.store}/>\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\nimport s from './DialogItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/messages/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.nameContainer}>\r\n            <NavLink to={path} className={s.name} activeClassName={s.active}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\n\r\nconst Dialogs = (props) => {\r\n    \r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsMessages = state.messages.map(\r\n        item => <Message message={item.message} key={item.id} />\r\n    )\r\n    let dialogsItems = state.dialogs.map(\r\n        item => <DialogItem name={item.name} key={item.id} id={item.id} />\r\n    )\r\n    let newMessageBody = state.newMessageBody;\r\n     \r\n    const onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    }\r\n    const onSendMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.namesList}>\r\n                {dialogsItems}\r\n            </div>\r\n            <div className={s.content}>\r\n                {dialogsMessages}\r\n                <div className={s.area}>\r\n                    <textarea \r\n                    value={newMessageBody}  \r\n                    placeholder={'Enter your message'} \r\n                    onChange={onSendMessageChange} \r\n                    ></textarea>\r\n\r\n                    <button onClick={onSendMessageClick}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {updateNewMessageBodyActionCreator, sendMessageActionCreator} from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    dialogsPage: state.dialogsPage\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: () => {\r\n      dispatch(sendMessageActionCreator());\r\n    },\r\n    updateNewMessageBody: (body) => {\r\n      dispatch(updateNewMessageBodyActionCreator(body));\r\n    }\r\n  }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps) (Dialogs);\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport styles from './styles.module.css'\r\n\r\nlet Users = (props) => {\r\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {pages.map(p => {\r\n          return <span\r\n            className={props.currentPage === p && styles.selectedPage}\r\n            onClick={() => { props.onPageChanged(p); }}\r\n          >{p}</span>;\r\n        })}\r\n      </div>\r\n      {props.users.map((item) => (\r\n        <div key={item.id}>\r\n          <span>\r\n            <div>\r\n              <img\r\n                src={item.photos.small != null ? item.photos.small : require(\"../../assets/images/users.png\")}\r\n                alt=\"photosos\"\r\n                className={styles.userPhoto}\r\n              />\r\n            </div>\r\n            <div>\r\n              {item.followed ? (\r\n                <button\r\n                  onClick={() => {\r\n                    props.unfollow(item.id)\r\n                  }}\r\n                >\r\n                  {' '}\r\n                  Unfollow{' '}\r\n                </button>\r\n              ) : (\r\n                  <button\r\n                    onClick={() => {\r\n                      props.follow(item.id)\r\n                    }}\r\n                  >\r\n                    {' '}\r\n                  Follow{' '}\r\n                  </button>\r\n                )}\r\n            </div>\r\n          </span>\r\n          <span>\r\n            <div>{item.name}</div>\r\n            <div>{item.status}</div>\r\n          </span>\r\n          {/* <span>\r\n            <div>{item.location.country}</div>\r\n            <div>{item.location.city}</div>\r\n          </span> */}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { followActionCreator, setUsersActionCreator, unfollowActionCreator, setCurrentPageAC, setUsersTotalCountAC } from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport * as axios from \"axios\"\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n  componentDidMount(){\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`)\r\n    .then(response => {\r\n      this.props.setUsers(response.data.items);\r\n      this.props.setTotalUsersCount(response.data.totalCount);\r\n    });\r\n  }\r\n\r\n  onPageChanged = (pageNumber) => {\r\n    this.props.setCurrentPage(pageNumber);\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`)\r\n    .then(response => {\r\n      this.props.setUsers(response.data.items)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <Users \r\n    totalUsersCount={this.props.totalUsersCount} \r\n    currentPage={this.props.currentPage}\r\n    pageSize={this.props.pageSize}\r\n    onPageChanged = {this.onPageChanged}\r\n    users={this.props.users}\r\n    follow={this.props.follow}\r\n    unfollow={this.props.unfollow}\r\n    />;\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return{\r\n    users: state.usersPage.users,\r\n    pageSize: state.usersPage.pageSize,\r\n    totalUsersCount: state.usersPage.totalUsersCount,\r\n    currentPage: state.usersPage.currentPage\r\n  }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return{\r\n    follow: (userId) => {\r\n      dispatch(followActionCreator(userId));\r\n    },\r\n    unfollow: (userId) => {\r\n      dispatch(unfollowActionCreator(userId));\r\n    },\r\n    setUsers: (users) => {\r\n      dispatch(setUsersActionCreator(users));\r\n    },\r\n    setCurrentPage: (pageNumber) => {\r\n      dispatch(setCurrentPageAC(pageNumber));\r\n    },\r\n    setTotalUsersCount: (totalCount) => {\r\n      dispatch(setUsersTotalCountAC(totalCount));\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (UsersContainer)","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Nav from './components/Navigation/Nav';\nimport Profile from './components/Profile/Profile';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport News from './components/News/News';\nimport Music from './components/Music/Music';\nimport Settings from './components/Settings/Settings';\nimport { Route, HashRouter } from 'react-router-dom';\nimport UsersContainer from './components/Users/UsersContainer';\n\nconst App = (props) => {\n  return (\n    <HashRouter>\n      <div className=\"app-wrapper\">\n        <Header />\n        <Nav state={props.store}/>\n        <div className=\"app-wrapper-content\">\n          <Route path='/messages' render={ () => <DialogsContainer />} />\n          <Route path='/profile'  render={ () => <Profile />}/>\n          <Route path='/users'  render={ () => <UsersContainer />}/>\n\n          <Route path='/news' component={News} />\n          <Route path='/music' component={Music} />\n          <Route path='/settings' component={Settings} />\n        </div>\n      </div>\n    </HashRouter>\n  )\n}\n\nexport default App;\n","import * as serviceWorker from './serviceWorker';\nimport store from './redux/redux-store';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport {Provider} from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App/>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nserviceWorker.unregister();\n"],"sourceRoot":""}